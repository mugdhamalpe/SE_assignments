# -*- coding: utf-8 -*-
"""DSL_Assignment2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NoyzU53C_zfb-wgiGTUTq5cWecrQC1Fh

Name: Mugdha Malpe<br>
Roll No. 21153<br>
Batch: G1<br>

DSL Assignment 2

Write a Python program to compute following operations on String:<br>
a) To display word with the longest length<br>
b) To determines the frequency of occurrence of particular character in the string<br>
c) To check whether given string is palindrome or not<br>
d) To display index of first appearance of the substring<br>
e) To count the occurrences of each word in a given string<br>
"""

class String:
    def __init__(self):
      self.string = input("Input the string: ")
      self.lst = list(self.string.split())

    def largest(self):
        list1 = []
        for i in self.lst:
          list1.append(len(i))
        return self.lst[(list1.index(max(list1)))]

    def frequency(self, charac):
        total = 0
        for i in self.string:
          if(i == charac):
            total+=1
        return total

    def palindrome(self):
        flag=True
        self.string=self.string.lower()
        for i in range(0, len(self.string)//2):
            if(self.string[i]!=self.string[len(self.string)-i-1]):
                flag = False
                break

        if(flag):
            print("Yes, given string is palindrome!")
        else:
            print("No, given string is not a palindrome")

    def first_appear(self, word):
        for i in range(len(self.string) - len(word)+1):
            if self.string[i:i+len(word)] == word:
                return i
        return 'Not Found'

    def count_occ(self, word):
        counts = dict()
        words = self.string.split()

        for w in words:
            if w in counts:
                counts[w] += 1
            else:
                counts[w] = 1
        return counts


string_new = String()
print("\nLongest word of the string: ", string_new.largest())

charac = input("\nEnter the character whose frequency needs to be found out: ")
print(f"Frequency of occurance of entered character, {charac} is: ", string_new.frequency(charac))

print("\nCheck whether the string is palindrome or not: ")
string_new.palindrome()

word=input("\nEnter substring whose first occurance you want to check: ")
word = word
print(f"The index of first appearance of {word} in string is: ", string_new.first_appear(word))

print("\nOccurance of each word in given string is: ", string_new.count_occ(word))